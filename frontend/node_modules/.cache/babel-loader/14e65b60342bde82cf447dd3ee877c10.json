{"ast":null,"code":"var _jsxFileName = \"/Users/kurtreyn/Repos/tmwsd_challenge/frontend/src/components/CreateMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateMessage() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  async function handlePost() {\n    const theHeaders = new Headers();\n    theHeaders.append('Content-Type', 'application/json');\n    const raw = JSON.stringify({\n      title: title,\n      body: body\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: theHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:2000/new', requestOptions);\n\n      if (response.status === 200) {\n        alert('Message created successfully');\n      } else {\n        alert(response.statusText);\n      }\n\n      console.log(response);\n    } catch (errors) {\n      console.log(errors);\n      alert(errors.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row create-message-row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateMessage, \"milCW1YMU7PUT9LpDiKyLDxJUCg=\");\n\n_c = CreateMessage;\nexport default CreateMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMessage\");","map":{"version":3,"names":["React","useState","Form","Button","CreateMessage","loading","setLoading","title","setTitle","body","setBody","handlePost","theHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","redirect","response","fetch","status","alert","statusText","console","log","errors","message","e","target","value"],"sources":["/Users/kurtreyn/Repos/tmwsd_challenge/frontend/src/components/CreateMessage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction CreateMessage() {\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  async function handlePost() {\n    const theHeaders = new Headers();\n    theHeaders.append('Content-Type', 'application/json');\n\n    const raw = JSON.stringify({\n      title: title,\n      body: body,\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: theHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:2000/new', requestOptions);\n      if (response.status === 200) {\n        alert('Message created successfully');\n      } else {\n        alert(response.statusText);\n      }\n      console.log(response);\n    } catch (errors) {\n      console.log(errors);\n      alert(errors.message);\n    }\n  }\n\n  return (\n    <div className=\"row create-message-row\">\n      <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Message</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateMessage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACvB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;EAEA,eAAeU,UAAf,GAA4B;IAC1B,MAAMC,UAAU,GAAG,IAAIC,OAAJ,EAAnB;IACAD,UAAU,CAACE,MAAX,CAAkB,cAAlB,EAAkC,kBAAlC;IAEA,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;MACzBV,KAAK,EAAEA,KADkB;MAEzBE,IAAI,EAAEA;IAFmB,CAAf,CAAZ;IAKA,MAAMS,cAAc,GAAG;MACrBC,MAAM,EAAE,MADa;MAErBC,OAAO,EAAER,UAFY;MAGrBH,IAAI,EAAEM,GAHe;MAIrBM,QAAQ,EAAE;IAJW,CAAvB;IAMAf,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8BL,cAA9B,CAA5B;;MACA,IAAII,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;QAC3BC,KAAK,CAAC,8BAAD,CAAL;MACD,CAFD,MAEO;QACLA,KAAK,CAACH,QAAQ,CAACI,UAAV,CAAL;MACD;;MACDC,OAAO,CAACC,GAAR,CAAYN,QAAZ;IACD,CARD,CAQE,OAAOO,MAAP,EAAe;MACfF,OAAO,CAACC,GAAR,CAAYC,MAAZ;MACAJ,KAAK,CAACI,MAAM,CAACC,OAAR,CAAL;IACD;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,6CAAf;MAAA,uBACE,QAAC,IAAD;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAA6B,SAAS,EAAC,2BAAvC;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,IAAI,EAAC,MADP;YAEE,QAAQ,EAAGC,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;YAGE,QAAQ;UAHV;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eASE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAA6B,SAAS,EAAC,8BAAvC;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YAAc,EAAE,EAAC,UAAjB;YAA4B,IAAI,EAAE;UAAlC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QATF,eAaE,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GA1DQ7B,a;;KAAAA,a;AA4DT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}